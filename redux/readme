
1，什么是redux？它能给我们带来什么？
redux的官方描述：
Redux is a predictable state container for JavaScript apps.（Redux 是 JavaScript 状态容器，提供可预测化的状态管理。）

demo
redux的原理（工作流程见图）

2，什么是action、reducer、state和store？
action:是一个普通的（纯）对象，用来描述应用程序中发生的某件事情（发生了什么变化），它是应用程序中可以用来描述数据变化的唯一角色。
reducer : 是一个纯函数，用来描述如何更新state。接收旧的 state 和 action，返回新的 state 返回给 store
state ：应用程序的状态（数据）；在Redux中，应用程序只能拥有一个sate，用来保存整个应用程序的状态
store： 一个Redex的实例就叫做store


3，store和state有什么区别？
store是一个管理者，是一个存放应用程序状态的地方；主要做以下几件事情：
1) 管理整个应用程序的状态；
2) 可以通过store.getState()来获取应用程序当前的状态；
3) 通过store.dispatch(action)来更新应用程序的状态；
4) 可以订阅应用程序状态的改变，来做些view层的改变：
穿插（连接）整个应用程序
state是存储在store中的一个对象，用于描述整个应用程序的数据（状态）；
store维护整个应用程序的状态树


4，什么样的场景适合用redux？什么样的场景不适合用redux？（优、缺点）
适用
1）一个页面的数据来源是多个地方，而数据的变化又需要反映在视图层

不使用
1）页面多，且数据量少，数据直接关联少


注意事项：
1）不要修改 state。 使用 Object.assign() 新建了一个副本。
2）在 default 情况下返回旧的 state。遇到未知的 action 时，一定要返回旧的 state。



"babel-preset-es2015": "^6.1.18",
"babel-preset-react": "^6.1.18",